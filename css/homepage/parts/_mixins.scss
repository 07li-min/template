// images
@mixin object($fit: cover, $position: unset) {
    display: block;
    width: 100%;
    height: 100%;

    @if $fit == cover {
        object-fit: cover;
    } @else if $fit == contain {
        object-fit: contain;
    } @else if $fit == fill {
        object-fit: fill;
    }

    @if $position == top {
        object-position: top;
    } @else if $position == bottom {
        object-position: bottom;
    } @else if $position == left {
        object-position: bottom;
    } @else if $position == right {
        object-position: right;
    } @else if $position == center {
        object-position: center;
    }
}

@mixin flex($justify: center, $align: center) {
    display: flex;

    @if ($justify == start) {
        justify-content: flex-start;
    } @else if ($justify == center) {
        justify-content: center;
    } @else if ($justify == end) {
        justify-content: flex-end;
    } @else if ($justify == between) {
        justify-content: space-between;
    } @else if ($justify == around) {
        justify-content: space-around;
    }

    @if ($align == start) {
        align-items: flex-start;
    } @else if ($align == center) {
        align-items: center;
    } @else if ($align == end) {
        align-items: flex-end;
    } @else if ($align == stretch) {
        align-items: stretch;
    }
}

@mixin screen($type) {
    @if $type == "hide" {
        height: 0;
        visibility: hidden;
        opacity: 0;
    } @else if $type == "show" {
        visibility: visible;
        opacity: 1;
    }
}

@mixin absolute($x: center, $y: center) {
    position: absolute !important;

    @if $x == left {
        left: 0;
    } @else if $x == center {
        left: 50%;
    } @else if $x == right {
        right: 0;
    }

    @if $y == top {
        top: 0;
    } @else if $y == center {
        top: 50%;
    } @else if $y == bottom {
        bottom: 0;
    }

    @if $x == center and $y == center {
        transform: translate(-50%, -50%);
    } @else if $x == center {
        transform: translateX(-50%);
    } @else if $y == center {
        transform: translateY(-50%);
    }
}

// PC first 반응형 화면 크기

@mixin mobile {
    @media all and (max-width: $bp-mobile) {
        @content;
    }
}

@mixin phone {
    @media all and (max-width: $bp-phone) {
        @content;
    }
}


@mixin scrollbar($thickness: .2rem) {
    &::-webkit-scrollbar {
        width: $thickness;
        height: $thickness;
    }

    &::-webkit-scrollbar-thumb {
        background-color: #d1d5db;
    }

    &::-webkit-scrollbar-track {
        background: transparent;
    }
}


@mixin ellipsis($line: one) {
    display: -webkit-box !important;
    line-height: 1.4;
    word-break: break-all;
    text-overflow: ellipsis;
    overflow: hidden;
    -webkit-box-orient: vertical;

    @if $line == one {
        max-height: calc(1em * 1.4 * 1);
        -webkit-line-clamp: 1;
    } @else if $line == two {
        max-height: calc(1em * 1.4 * 2);
        -webkit-line-clamp: 2;
    }
}


@mixin text-hide() {
    font: 0/0 auto;
    text-shadow: none;
    text-indent: -9999px;
}